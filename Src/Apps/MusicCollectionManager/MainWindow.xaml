<Window x:Class="MMK.MusicCollectionManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:wpfm="clr-namespace:MMK.Wpf;assembly=WPFTools"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:MMK.MusicCollectionManager.ViewModel"
        mc:Ignorable="d"
        Style="{StaticResource VS2012WindowStyle}"
        Title="MMK : Music collection manager"
        Icon="Resources\MusicCollectionManagerLogo.ico"
        Width="600"
        Height="600"
        MinWidth="{Binding ElementName=processingOperationsContainer,Path=ActualWidth }" 
        MinHeight="100" d:DataContext="{d:DesignInstance viewModel:MainViewModel}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="propertiesRow" 
                           Height="auto" MaxHeight="27"/>
            <RowDefinition x:Name="itemsRow" Height="*"/>
            <RowDefinition x:Name="processingRow" 
                           Height="auto" MaxHeight="27"/>
            <RowDefinition x:Name="statusBarRow" 
                           Height="auto" MaxHeight="27"/>
        </Grid.RowDefinitions>

        <StackPanel x:Name="processingOperationsContainer">
            <ToggleButton Style="{StaticResource ToggleStyle}"
                          IsChecked="{Binding IsNormalizeTrackName}">
                Normalize track name
            </ToggleButton>
            <ToggleButton Style="{StaticResource ToggleStyle}"
                          IsChecked="{Binding IsWriteId3Tags}">
                Write Id3 tags
            </ToggleButton>
            <ToggleButton Style="{StaticResource ToggleStyle}"
                          IsChecked="{Binding IsDeleteOldId3Tags}">
                Delete old Id3 tags
            </ToggleButton>
            <ToggleButton Style="{StaticResource ToggleStyle}"
                          IsChecked="{Binding IsRemoveAfterProcessing}">
                Remove after processing
            </ToggleButton>

            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Orientation" Value="Horizontal"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsProcessingStartedOrIsEmpty}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Height"
                                            From="27"
                                            To="0"
                                            Duration="0:0:0.25"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Height"
                                            From="0"
                                            To="27" 
                                            Duration="0:0:0.25"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>

                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
        </StackPanel>

        <TextBlock Grid.Row="1"
        	FontSize="30"
            Opacity="0.9"
        	HorizontalAlignment="Center" 
        	VerticalAlignment="Center">
            Drop Items
        </TextBlock>

        <ListView x:Name="items"
                  Grid.Row="1"
                 ItemsSource="{Binding Items}"
                 HorizontalContentAlignment="Stretch" 
                 AllowDrop="True"
                 Opacity="0.5">

            <ListView.Style>
                <Style TargetType="{x:Type ListView}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Items.Count}" Value="0">

                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.25"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1" 
                                            Duration="0:0:0.25"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>

                    <Style.Setters>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Foreground" 
                                            Value="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListViewItem">
                                                <Border SnapsToDevicePixels="True"
                                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                                        Background="{TemplateBinding Background}">
                                                    <Border Name="InnerBorder" BorderThickness="1">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition MaxHeight="11" />
                                                                <RowDefinition />
                                                            </Grid.RowDefinitions>
                                                            <Rectangle Name="UpperHighlight" 
                                                                       Visibility="Collapsed"/>
                                                            <GridViewRowPresenter Grid.RowSpan="2" 
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </Grid>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="#BCDDEE"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#BEE6FD"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                </Style>
            </ListView.Style>

            <ListView.View>
                <GridView AllowsColumnReorder="True">
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="{TemplateBinding Content}"
                                                       Padding="4" 
                                                       Width="{TemplateBinding Width}" 
                                                       Background="{TemplateBinding Background}"
                                                       Foreground="{TemplateBinding Foreground}"/>
                                            <Thumb Name="PART_HeaderGripper"
                                                   Grid.Column="1"
                                                   Width="5"
                                                   Foreground="{TemplateBinding BorderBrush}">
                                                <Thumb.Template>
                                                    <ControlTemplate>
                                                        <Grid>
                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                       Fill="Transparent"/>
                                                            <Rectangle Fill="{TemplateBinding Foreground}"
                                                                       HorizontalAlignment="Center"
                                                                       Width="1"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Thumb.Template>
                                            </Thumb>
                                            <Separator Grid.Row="1"
                                                       Grid.ColumnSpan="2"
                                                       Margin="0"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                    <GridViewColumn Header="Folder name"
                                    DisplayMemberBinding="{Binding FolderName}"/>
                    <GridViewColumn Header="Clear file name">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBox Text="{Binding ClearFileName}"
                                             IsReadOnly="{Binding Path=IsProcessingStarted, RelativeSource={RelativeSource Mode=PreviousData}}">
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Background" Value="White"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Hash tag model"
                                    DisplayMemberBinding="{Binding HashTagModelString}"/>
                </GridView>
            </ListView.View>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Drop">
                    <wpfm:InvokeDelegateCommandAction
                        Command="{Binding AddItemsFromDropCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <ListView.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding AddItemCommand}"/>
                <KeyBinding Key="Delete" 
                            Command="{Binding RemoveItemsCommand}"
                            CommandParameter="{Binding  ElementName=items, Path=SelectedItems}"/>
            </ListView.InputBindings>
        </ListView>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CanStartProcessing}"
                                     Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Height"
                                            From="27"
                                            To="0"
                                            Duration="0:0:0.25"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Height"
                                            From="0"
                                            To="27" 
                                            Duration="0:0:0.25"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Button Command="{Binding StartPauseProcessingCommand}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CleanButtonStyle}">
                        <Setter Property="Content" Value="Start processing"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsProcessingPaused}" Value="True">
                                
                            </DataTrigger>
                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsProcessingStarted}" Value="True"/>
                                    <Condition Binding="{Binding IsProcessingPaused}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Content" Value="Continue processing"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsProcessingStarted}" Value="True"/>
                                    <Condition Binding="{Binding IsProcessingPaused}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Content" Value="Pause processing"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <Button Grid.Column="1"
                    Content="Cancell"
                    Command="{Binding CancellProcessingCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource CleanButtonStyle}">
                        <Setter Property="Width" Value="0"/>
                        <Setter Property="Foreground" Value="Red"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsProcessingStarted}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Width" Value="109"/>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

        <StatusBar Name="StatusBar" Grid.Row="3">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem>
                <TextBlock Text="{Binding StatusState}"/>
            </StatusBarItem>

            <StatusBarItem Grid.Column="1">
                <TextBlock Text="{Binding StatusMessage}" />
            </StatusBarItem>

            <StatusBarItem Grid.Column="2">
                <ProgressBar Value="{Binding TotalProgressValue}"
                             Maximum="{Binding Items.Count}"
                             Minimum="0">
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Setter Property="Width" Value="100"/>
                            <Setter Property="Height" Value="17"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsProcessingStarted}" 
                                             Value="false">
                                    <DataTrigger.Setters>
                                        <Setter Property="Width" Value="0"/>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <ResizeGrip Opacity="0.7"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <wpfm:InvokeDelegateCommandAction Command="{Binding ClosingCommand}"
                                              CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>